#!/usr/bin/env python
# -*- coding: utf-8 -*-
import sys
import os
import dropbox
import requests


from optparse import OptionParser


def upload_file(project_id, filename, dropbox_token):
    dbx = dropbox.Dropbox(dropbox_token)
    file_path = os.path.abspath(filename)
    path_end = "".join(["{}{}".format(os.sep, x) for x in file_path.split(os.sep)[-2:]])
    with open(filename, "rb") as f:
        dbx.files_upload(f.read(), path_end, mute=True)
        print('Uploading file...')
        link = dbx.files_get_temporary_link(path=path_end).link
        return link


def create_new_issue(project_id, file, gitlab_token, title, link):
    headers = {'PRIVATE-TOKEN': gitlab_token}
    html_link = '<a href="{0}" style="color:red">{1}</a>'.format(link, file)
    params = {
        'title': title,
        'description': html_link
    }
    r = requests.post('https://gitlab.com/api/v4/projects/{0}/issues'.format(project_id), headers=headers, params=params)
    print('New issue is done')

if __name__ == '__main__':
    parser = OptionParser()
    parser.add_option("--dropbox_token", dest="dropbox_token", help="Dropbox private token")
    parser.add_option("--gitlab_token", dest="gitlab_token", help="Gitlab private token")
    parser.add_option("-f", "--file", dest="file", help="File to upload gitlab.com")
    parser.add_option("-p", "--project", dest="project_id", help="Project id where you will upload file")
    parser.add_option("-t", "--title", dest="title", help="Title for new issue")


    (options, args) = parser.parse_args()
    if not options.project_id or not options.gitlab_token:
        parser.print_help()
        sys.exit(0)

    status_message = upload_file(options.project_id, options.file, options.dropbox_token)
    print(create_new_issue(options.project_id, options.file, options.gitlab_token, options.title, status_message))


